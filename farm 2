local function invitePlayers(playerNames)
    local localPlayer = game.Players.LocalPlayer
    if localPlayer.Name == "OhmaKun" then
        for _, playerName in ipairs(playerNames) do
            local targetPlayer = game.Players:FindFirstChild(playerName)
            if targetPlayer and targetPlayer:IsA("Player") and targetPlayer.Character then
                local success, error = pcall(function()
                    local partyInviteEvent = game:GetService("ReplicatedStorage").Events.PartyEvent
                    partyInviteEvent:FireServer("PartyInvite", targetPlayer)
                end)
                if not success then
                    warn("Failed to invite player: " .. playerName .. ", Error: " .. error)
                end
            else
                warn("Invalid player or character for: " .. playerName)
            end
        end
    else
        warn("You are not authorized to send party invites.")
    end
end

local function startDungeonIfAuthorized(playerNames)
    local localPlayer = game.Players.LocalPlayer
    if localPlayer.Name == "OhmaKun" then
        local dungeonEvent = game:GetService("ReplicatedStorage").Events.DungeonEvent
        dungeonEvent:FireServer("StartDungeon")
    else
        warn("You are not authorized to start the dungeon.")
    end
end

local function waitForCaveDweller(maxTimer)
    local caveDwellerFound = false
    local timer = 0

    while not caveDwellerFound and timer <= maxTimer do
        local dungeon = game.Workspace.BreakableParts.Dungeon
        for _, v in pairs(dungeon:GetChildren()) do
            if v.Name == "AngelNoob" then
                caveDwellerFound = true
                break
            end
        end
        wait(1) -- Wait for 1 second before checking again
        timer = timer + 1
    end

    if caveDwellerFound then
        print("CaveDweller found! Continuing with the next steps...")
        game:GetService("ReplicatedStorage").Events.DungeonEvent:FireServer("Exit")
    else
        print("CaveDweller not found within the time limit. Exiting dungeon.")
        game:GetService("ReplicatedStorage").Events.DungeonEvent:FireServer("Exit")
    end
end

-- Example usage
while true do
    local playerNames = { "GEMLordKun06", "taokoma", "GEMLordKun05", "GEMLordKun04", "GEMLordKun3", "GEMLordKun02", "GEMLordKun01", "GemLordKun11", "GemLordKun12", "GemLordKun01" }
    invitePlayers(playerNames)
    wait(5)
    startDungeonIfAuthorized(playerNames)
	game:GetService("ReplicatedStorage").Events.TeleportEvent:InvokeServer("Teleport", 1)
    waitForCaveDweller(500) 

    local angelNoob = game.Players:FindFirstChild("AngelNoob")
    while angelNoob do
        print("Waiting for AngelNoob to leave the dungeon...")
        wait(5) -- Check again after waiting for 5 seconds
        angelNoob = game.Players:FindFirstChild("AngelNoob")
    end

    -- If AngelNoob is not in the dungeon, proceed with the next steps
    print("AngelNoob has left the dungeon. Continuing with the next steps...")
    -- Your additional actions here
    
    wait(0.1) -- Wait for 7 seconds before the next iteration
end
